@inject IDataSolvent DataSolvent
@inject IDataProduct DataProduct
@inject ICalculator calculator
@inject IDataWork DataWork
`

<div class="card mx-auto m-10 text-center" style="max-width: 50rem; ">
      <EditForm Model="@modelFormCalculator" OnValidSubmit="HandleValidSubmit">
          <div class="card-header">
           <h3 class="pt-3 text-center">КАЛЬКУЛЯТОР ОКУПАЕМОСТИ ДИСТИЛЛЯТОРА</h3>   
          </div>
          <div class="card-body">
              <div class="form-group mt-2">
            <label>Выбор модели дистиллятора</label>
            <InputSelect class="form-control" @bind-Value="modelFormCalculator.Volume">
                    <option selected value="">Выбрать</option>
                @foreach (var item in Products)
                {
                    <option value="@item.Volume">@item.Name</option>
                }
            </InputSelect>
                <ValidationMessage For="@(() => modelFormCalculator.Volume)" />
              </div>
         <div class="form-group mt-2">
            <label>Марка растворителя</label>
                <InputSelect class="form-control" @bind-Value="modelFormCalculator.PriceSolvent">
                    <option selected value="">Выбрать</option>
                    @foreach(var item in Solvents)
                    {
                    <option value="@item.Price">@item.Name</option>
                    }
                </InputSelect>
                 <ValidationMessage For="@(() => modelFormCalculator.PriceSolvent)" />
         </div>
         <div class="form-group mt-2">
            <label>Режим работы</label>
            <InputSelect class="form-control" @bind-Value="modelFormCalculator.Hours">
                    <option selected value="">Выбрать</option>
                    @foreach(var item in Works)
                    {
                    <option value="@item.Count">@item.Name</option>
                    }
            </InputSelect>
                <ValidationMessage For="@(() => modelFormCalculator.Hours)" />
         </div>     
          </div>
            <div class="card-footer m-2">
                <div >
                <button class="btn btn-primary" type="submit">Посчитать</button>
                </div>
            </div>
  </EditForm>
  <h3 class="mt-2 " style="display:@displayDays"> Оборудование окупится за: @days дней</h3>
</div>

@code {

    private int days = 0 ;
    private string displayDays = "none";

    private List<Solvent> Solvents = new List<Solvent>();
    private List<Product> Products = new List<Product>();
    private List<Work> Works = new List<Work>();
    CalculatorModel modelFormCalculator;

    private async Task HandleValidSubmit()
    {
       
        days = await calculator.Calculate(modelFormCalculator);
        displayDays = "block";
    }
    protected override async Task OnInitializedAsync()
    {
        modelFormCalculator = new CalculatorModel();
        Solvents = await DataSolvent.GetAllSolvents();
        Products = await DataProduct.GetAllDistillars();
        Works = await DataWork.GetWorks();
    }


}
